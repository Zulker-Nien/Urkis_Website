import * as THREE from "three";
import React, { Suspense, useEffect, useRef, useState } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { Environment, useGLTF, ContactShadows } from "@react-three/drei";
import { useSpring } from "@react-spring/core";
import { a as three } from "@react-spring/three";
import { a as web } from "@react-spring/web";
import { action, makeObservable, observable } from "mobx";
import { createContext } from "react";
import { AiOutlineGithub, AiFillFacebook, AiFillLinkedin} from "react-icons/ai";

import { NavLink } from "react-router-dom";
import Rellax from "rellax";
import Post from "./Post";
import Word from "./Word";
import "./styles.scss";
import Fiverr from "./Fiverr";
import Upwork from "./Upwork";
import Navbar from "./Navbar";

const vec = new THREE.Vector3();

function Model({ open, hinge, ...props }) {
  const group = useRef();
  // Load model
  const { nodes, materials } = useGLTF(
    window.location.origin + "/mac-draco.glb"
  );
  // Take care of cursor state on hover
  const [hovered, setHovered] = useState(false);
  useEffect(
    () => void (document.body.style.cursor = hovered ? "pointer" : "auto"),
    [hovered]
  );
  // Make it float in the air when it's opened
  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    state.camera.position.lerp(vec.set(0, 0, open ? -24 : -32), 0.1);
    state.camera.lookAt(0, 0, 0);
    group.current.rotation.x = THREE.MathUtils.lerp(
      group.current.rotation.x,
      open ? Math.cos(t / 2) / 8 + 0.25 : 0,
      0.1
    );
    group.current.rotation.y = THREE.MathUtils.lerp(
      group.current.rotation.y,
      open ? Math.sin(t / 4) / 4 : 0,
      0.1
    );
    group.current.rotation.z = THREE.MathUtils.lerp(
      group.current.rotation.z,
      open ? Math.sin(t / 4) / 4 : 0,
      0.1
    );
    group.current.position.y = THREE.MathUtils.lerp(
      group.current.position.y,
      open ? (-2 + Math.sin(t)) / 3 : -4.3,
      0.1
    );
  });
  // The view was auto-generated by: https://github.com/pmndrs/gltfjsx
  // Events and spring animations were added afterwards
  return (
    <group
      ref={group}
      {...props}
      onPointerOver={(e) => (e.stopPropagation(), setHovered(true))}
      onPointerOut={(e) => setHovered(false)}
      dispose={null}
    >
      <three.group rotation-x={hinge} position={[0, -0.04, 0.41]}>
        <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            material={materials.aluminium}
            geometry={nodes["Cube008"].geometry}
          />
          <mesh
            material={materials["matte.001"]}
            geometry={nodes["Cube008_1"].geometry}
          />
          <mesh
            material={materials["screen.001"]}
            geometry={nodes["Cube008_2"].geometry}
          />
        </group>
      </three.group>
      <mesh
        material={materials.keys}
        geometry={nodes.keyboard.geometry}
        position={[1.79, 0, 3.45]}
      />
      <group position={[0, -0.1, 3.39]}>
        <mesh
          material={materials.aluminium}
          geometry={nodes["Cube002"].geometry}
        />
        <mesh
          material={materials.trackpad}
          geometry={nodes["Cube002_1"].geometry}
        />
      </group>
      <mesh
        material={materials.touchbar}
        geometry={nodes.touchbar.geometry}
        position={[0, -0.03, 1.2]}
      />
    </group>
  );
}

export default function App() {
  // This flag controls open state, alternates between true & false

  const [open, setOpen] = useState(false);
  const [navbarbg, setNavbarbg] = useState(false);
  const [navbarbg1, setNavbarbg1] = useState(false);

  const changebg = () => {
    if (window.scrollY >= "815") {
      setNavbarbg(true);
    } else {
      setNavbarbg(false);
    }
  };
  const changebg1 = () => {
    if (window.scrollY >= "10") {
      setNavbarbg1(true);
    } else {
      setNavbarbg1(false);
    }
  };
  const changebg2 = () => {
    if (window.scrollY >= "10") {
      setNavbarbg1(true);
    } else {
      setNavbarbg1(false);
    }
  };
  useEffect(() => {
    new Rellax(".rellax");
  }, []);
  window.addEventListener("scroll", changebg);
  window.addEventListener("scroll", changebg1);
  window.addEventListener("scroll", changebg2);
  // const [showTxt, setTxt] = useState(false)
  // We turn this into a spring animation that interpolates between 0 and 1
  const props = useSpring({ open: Number(open) });

  return (
    <>
      <div className="Container" id="container">
        {open && (
          <div className={navbarbg1 ? "StartPrompt1" : "StartPrompt"}>
            <h2>Lets Go</h2>
            <div className="arrow down"></div>
          </div>
        )}
        <web.main
          style={{ background: props.open.to([0, 1], ["#f0f0f0", "#efe22b"]) }}
        >
          <h2 style={{ color: "orange", position: "absolute" }}>
            Under Development. Click on Laptop to Start. Updated as of :{" "}
            <span style={{ color: "red" }}>8th August,2021</span>
          </h2>
          {/* <h2 style={{ color: "red", position: "absolute", marginTop: "10vh" }}>
            For Web View Currently(Making Mobile View)
          </h2> */}
          <web.h1
            style={{
              opacity: props.open.to([0, 1], [1, 0]),
              transform: props.open.to(
                (o) => `translate3d(-50%,${o * 50 - 100}px,0)`
              ),
            }}
          >
            hello. This is Zulker.
          </web.h1>

          <Canvas dpr={[1, 2]} camera={{ position: [0, 0, 0], fov: 35 }}>
            <three.pointLight
              position={[10, 10, 10]}
              intensity={1.5}
              color={props.open.to([0, 1], ["#00", "#000"])}
            />
            <Suspense fallback={null}>
              <group
                rotation={[0, Math.PI, 0]}
                onClick={(e) => (e.stopPropagation(), setOpen(!open))}
              >
                <Model
                  open={open}
                  hinge={props.open.to([0, 1], [1.575, -0.425])}
                ></Model>
              </group>
              <Environment preset="city" />
            </Suspense>
            <ContactShadows
              rotation-x={Math.PI / 2}
              position={[0, -4.5, 0]}
              opacity={0.4}
              width={20}
              height={20}
              blur={2}
              far={4.5}
            />
          </Canvas>
        </web.main>
        <div className={open ? "ContainerOpen" : "ContainerClosed"}>
          {/* NAVBAR GOES HERE */}
          <div className={navbarbg ? "NavbarAbs" : "Navbar"}>
            <Navbar />
          </div>

          <div className="Contents rellax"
                  data-rellax-speed="0.1"
                  data-rellax-xs-speed="0.1"
                  data-rellax-percentage="0.59">
            {/* Section-1 */}
            <section className="Section1">
              <div
                className="Left1 rellax"
                data-rellax-speed="2"
                // data-rellax-xs-speed="5"
                data-rellax-percentage="0.19"
              >
                <h2
                  className="rellax"
                  data-rellax-speed="-3"
                  // data-rellax-xs-speed="5"
                  data-rellax-percentage="0.19"
                >
                  Who Am I?
                </h2>
              </div>
              <div className="Right1">
                <h2
                  className="rellax"
                  data-rellax-speed="-4"
                  data-rellax-xs-speed="1"
                  data-rellax-percentage="0.19"
                >
                  A Creative Developer<div className="KnowSkills rellax"
                  // data-rellax-speed="-4"
                  data-rellax-xs-speed="1"
                  data-rellax-percentage="0.19">
                  <h4>Get to know me.</h4>
                </div>
                </h2>
                
              </div>
            </section>
            <section className="Section2">
              <Canvas camera={{ position: [0, 2, 20], fov: 40 }}>
                <fog attach="fog" args={["#cc7b32", 0, 500]} />
                <Suspense fallback={null}>
                  <Post />
                </Suspense>
              </Canvas>
            </section>
            <section className="Section3">
              <div class="container">
                <svg viewBox="0 0 500 500" preserveAspectRatio="xMinYMin meet">
                  <path
                    d="M0,50 C100,200 550,0 500,100 L500,150 L0,150 Z"
                    style={{
                      stroke: "none",
                      fill: "#210368",
                      boxShadow: "2px 50px 2px 2px rgba(0, 0, 0, 0.2);",
                    }}
                  ></path>
                </svg>
              </div>
              <div className="Left2">
                <h2>What I do?</h2>
                <h3>Want to know more about my skills?</h3>
                <div className="KnowSkills">
                  <h4>Click here</h4>
                </div>
              </div>
              <div className="Right2">
                <Word />
              </div>
            </section>
            <section className="Section4">
              <div className="Left2">
                <h2
                  className="rellax"
                  data-rellax-speed="0.1"
                  data-rellax-xs-speed="0.1"
                  data-rellax-percentage="0.59"
                >
                  How to find me?
                </h2>

                <NavLink
                  className="KnowSkills"
                  to="/connect"
                  style={{ textDecoration: "none", color: "#1d1d1d" }}
                >
                  <h4>It's easy, click here</h4>
                </NavLink>
              </div>
              <div className="Right2">
                <div className="socialLinks">
                  <div className="github"><h2 >Github</h2><AiOutlineGithub style={{fontSize:"2rem"}}/></div>
                  <div className="linkedIn"><h2 >LinkedIn</h2><AiFillLinkedin style={{fontSize:"2rem"}}/></div>
                  <div className="facebook"><h2 >Facebook</h2><AiFillFacebook style={{fontSize:"2rem"}}/></div>
                </div>
                <Upwork />
                <Fiverr />
              </div>
            </section>
          </div>
        </div>
      </div>
    </>
  );
}
